/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.QuanLyThuVien;
import Model.NhanVien;
import factory.FileFactory;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.border.TitledBorder;

/**
 *
 * @author 
 */
public class frmDangNhap extends javax.swing.JFrame {

    /**
     * Creates new form frmDangNhap
     */
    private NhanVien nhanVienDangNhap = null;
    private QuanLyThuVien quanLyThuVien = new QuanLyThuVien();

    frmDangNhap() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public NhanVien getNhanVienDangNhap() {
        return nhanVienDangNhap;
    }

   
    JTextField txtUser;
	JPasswordField txtPassword;
	JButton btnLogin, btnExit;
	JCheckBox chkSave;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    public frmDangNhap(String title) {
		super(title);
		addControls();
		addEvents();
		
	}

	

	private void addEvents() {
		btnLogin.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				xuLyDangNhap();
				
			}
		});
	btnExit.addActionListener(new ActionListener() {
		
		@Override
		public void actionPerformed(ActionEvent e) {
			// TODO Auto-generated method stub
			 int isAccept = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn thoát không?", "Cảnh báo", JOptionPane.YES_NO_OPTION);
		        if (isAccept == JOptionPane.YES_OPTION) {
		            dispose();
		        }
			
		}
	});	
	
	}
	

	protected void xuLyDangNhap() {
		// TODO Auto-generated method stub
		String sql = String.format("select * from NhanVien where MaSoNhanVien = '%s' and matkhau = '%s';",
                txtUser.getText(), txtPassword.getText());
		nhanVienDangNhap = quanLyThuVien.getNhanVien(sql);
        if (nhanVienDangNhap == null) {
            JOptionPane.showMessageDialog(rootPane, "Thông tin đăng nhập sai, hãy kiểm tra lại tài khoản và mật khẩu",
                    "Đăng nhập không thành công",2,null);
        } else {
        	
            JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công với tài khoản thủ thư "
                    + nhanVienDangNhap.getHoTen(), "Đăng nhập thành công",1,null);
            frmMain main = new frmMain();
            main.setVisible(true);
            main.setNhanVienDangNhap(nhanVienDangNhap);
            dispose();
        }

	}

	private void addControls() {
		Container con = getContentPane();
		con.setLayout(new BorderLayout());
		JPanel pnNorth = new JPanel();
		con.add(pnNorth, BorderLayout.NORTH);
		JPanel pnCenter = new JPanel();
		con.add(pnCenter, BorderLayout.CENTER);
		JPanel pnSouth = new JPanel();
		con.add(pnSouth, BorderLayout.SOUTH);

		JLabel lblTitle = new JLabel("Đăng nhập hệ thống");
		lblTitle.setFont(new Font("tahoma", Font.BOLD, 18));
		lblTitle.setForeground(Color.RED);
		pnNorth.add(lblTitle);

		pnCenter.setLayout(new BorderLayout());
		JPanel pnImage = new JPanel();
		JLabel lblIcon = new JLabel(new ImageIcon("images/login.png"));
		pnImage.add(lblIcon);
		pnCenter.add(pnImage, BorderLayout.WEST);

		JPanel pnUser = new JPanel();
		pnUser.setLayout(new BoxLayout(pnUser, BoxLayout.X_AXIS));
		pnCenter.add(pnUser, BorderLayout.CENTER);

		JPanel pnUserName = new JPanel();
		pnUser.setLayout(new FlowLayout(FlowLayout.LEFT));
		JLabel lblUserName = new JLabel("Tài khoản:");
		txtUser = new JTextField(20);
		pnUserName.add(lblUserName);
		pnUserName.add(txtUser);
		pnUser.add(pnUserName);

		JPanel pnPasswork = new JPanel();
		pnUser.setLayout(new FlowLayout(FlowLayout.LEFT));
		JLabel lblPassword = new JLabel("Mật khẩu:");
		txtPassword = new JPasswordField(20);
		pnPasswork.add(lblPassword);
		pnPasswork.add(txtPassword);
		pnUser.add(pnPasswork);

		btnLogin = new JButton("Đăng nhập");
		btnExit = new JButton("Thoát");

		pnSouth.add(btnLogin);
		pnSouth.add(btnExit);

		btnLogin.setIcon(new ImageIcon("images/DangNhap.png"));
		btnExit.setIcon(new ImageIcon("images/Exit.png"));

		TitledBorder borderUser = new TitledBorder(BorderFactory.createLineBorder(Color.BLUE), "Thông tin đăng nhập");
		pnUser.setBorder(borderUser);
		pnCenter.setBorder(BorderFactory.createLineBorder(Color.RED));

		lblPassword.setPreferredSize(lblUserName.getPreferredSize());

	}

	public void showWindows() {
		this.setSize(500, 270);
		this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		this.setResizable(false);
		this.setLocationRelativeTo(null);
		this.setVisible(true);
	}
}
